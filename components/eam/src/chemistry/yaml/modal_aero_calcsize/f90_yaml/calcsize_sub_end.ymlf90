#ifdef YAML_CALC
  ! YAML file output generation code- DO NOT PORT to C++
  if(yaml%flag_print) then ! if this column exists in lchnk

     !write output header
     call write_output_header(unit_output)

     !start writing data
     if(writecol) then
        call write_output_aerosol_mmr_from_stateq(unit_output,'interstitial_ptend',dqdt(yaml%col_print,:,:))
        call write_output_aerosol_mmr_from_stateq(unit_output,'interstitial_ptend_num',dqdt(yaml%col_print,:,:),.true.)
        call write_output_aerosol_mmr_from_stateq(unit_output,'cloud_borne_ptend',dqqcwdt(yaml%col_print,:,:))
        call write_output_aerosol_mmr_from_stateq(unit_output,'cloud_borne_ptend_num',dqqcwdt(yaml%col_print,:,:),.true.)
        call write_2d_output_var(unit_output, 'diameter', size(dgncur_a,2), 4, dgncur_a(yaml%col_print,:,:))
     else
        call write_output_aerosol_mmr_from_stateq(unit_output,'interstitial_ptend',dqdt(yaml%col_print,yaml%lev_print,:))
        call write_output_aerosol_mmr_from_stateq(unit_output,'interstitial_ptend_num',dqdt(yaml%col_print,yaml%lev_print,:),.true.)
        call write_output_aerosol_mmr_from_stateq(unit_output,'cloud_borne_ptend',dqqcwdt(yaml%col_print,yaml%lev_print,:))
        call write_output_aerosol_mmr_from_stateq(unit_output,'cloud_borne_ptend_num',dqqcwdt(yaml%col_print,yaml%lev_print,:),.true.)
        call write_1d_output_var(unit_output, 'diameter', 4, dgncur_a(yaml%col_print,yaml%lev_print,:))
     endif

     !close the output file
     close(unit_output)
     call freeunit(unit_output)
  endif
#endif
