

      do lmz = 1, gas_pcnst
         qgcm1(lmz)    = max( 0.0_r8, q_pregaschem(i,k,lmz) )
         qgcm2(lmz)    = max( 0.0_r8, q_precldchem(i,k,lmz) )
         qqcwgcm2(lmz) = max( 0.0_r8, qqcw_precldchem(i,k,lmz) )
         qgcm3(lmz)    = max( 0.0_r8, q(i,k,lmz) )
         qqcwgcm3(lmz) = max( 0.0_r8, qqcw(i,k,lmz) )
      end do
      qaerwatgcm3(:) = 0.0_r8
      if ( present( qaerwat ) ) then
         qaerwatgcm3(1:ntot_amode) = max( 0.0_r8, qaerwat(i,k,1:ntot_amode) )
      end if

#if ( defined( CAMBOX_ACTIVATE_THIS ) )
      n = min( maxsubarea, nsubarea+1 )
#else
      n = nsubarea
#endif
      qsub1(:,1:n) = 0.0_r8
      qsub2(:,1:n) = 0.0_r8
      qsub3(:,1:n) = 0.0_r8
      qqcwsub1(:,1:n) = 0.0_r8
      qqcwsub2(:,1:n) = 0.0_r8
      qqcwsub3(:,1:n) = 0.0_r8
      qaerwatsub3(:,1:n) = 0.0_r8

!
! calculate initial (i.e., before cond/rnam/nnuc/coag) tracer mixing ratios within the sub-areas
!    for all-clear or all-cloudy cases, the sub-area TMRs are equal to the grid-cell means
!    for partly cloudy case, they are different.  This is primarily because the
!       interstitial aerosol mixing ratios are assumed lower in the cloudy sub-area than in
!       the clear sub-area, because much of the aerosol is activated in the cloudy sub-area.
!
      if ( (jclea > 0) .and. (jcldy > 0) .and. &
           (jclea+jcldy == 3) .and. (nsubarea == 2) ) then
! partly cloudy case

! set gas mixing ratios in sub-areas (for the condensing gases only!!)

         lcopy(:) = lmapcc_all(:).eq.lmapcc_val_gas 

         ! assume gas in both sub-areas before gas-chem and cloud-chem equal grid-cell mean
         do isub = 1,nsubarea
            call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm1, qsub1(:,isub) )
            call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm2, qsub2(:,isub) )
         end do

        !++ to be removed --
        !do lmz = 1, gas_pcnst
        !   if (lmapcc_all(lmz) /= lmapcc_val_gas) cycle
        !   ! assume gas in both sub-areas before gas-chem and cloud-chem equal grid-cell mean
        !   qsub1(lmz,1:nsubarea) = qgcm1(lmz)
        !   qsub2(lmz,1:nsubarea) = qgcm2(lmz)
        !end do
        !== to be removed --


         do lmz = 1, gas_pcnst
            if (lmapcc_all(lmz) /= lmapcc_val_gas) cycle

            ! assume gas in clear sub-area after cloud-chem equals before cloud-chem value
            qsub3(lmz,jclea) = qsub2(lmz,jclea)
            ! gas in cloud sub-area then determined by grid-cell mean and clear values
            qsub3(lmz,jcldy) = (qgcm3(lmz) - fclea*qsub3(lmz,jclea))/fcldy
            ! check that this does not produce a negative value
            if (qsub3(lmz,jcldy) < 0.0_r8) then
               qsub3(lmz,jcldy) = 0.0_r8
               qsub3(lmz,jclea) = qgcm3(lmz)/fclea
            end if
         end do

! set aerosol mixing ratios in sub-areas
         do n = 1, ntot_amode

         do l2 = 0, nspec_amode(n)

            if (l2 <= 1) then
            ! calculcate partitioning factors
               if (l2 == 0) then
                  la = numptr_amode(n) - loffset
                  lc = numptrcw_amode(n) - loffset
                  tmp_qa_gcav = qgcm2(la)
                  tmp_qc_gcav = qqcwgcm2(lc)
               else
                  tmp_qa_gcav = 0.0_r8
                  tmp_qc_gcav = 0.0_r8
                  do l3 = 1, nspec_amode(n)
                     la = lmassptr_amode(l3,n) - loffset
                     tmp_qa_gcav = tmp_qa_gcav + qgcm2(la)
                     lc = lmassptrcw_amode(l3,n) - loffset
                     tmp_qc_gcav = tmp_qc_gcav + qqcwgcm2(lc)
                  end do
               end if

               tmp_qc_cldy = tmp_qc_gcav/fcldy
               tmp_qa_cldy = max( 0.0_r8, ((tmp_qa_gcav+tmp_qc_gcav) - tmp_qc_cldy) )
               tmp_qa_clea = (tmp_qa_gcav - fcldy*tmp_qa_cldy)/fclea

               ! *** question ***
               !    use same tmp_aa_clea/cldy for everything ?
               !    use one for number and one for all masses (based on total mass) ?
               !    use separate ones for everything ?
               ! maybe one for number and one for all masses is best,
               !    because number and mass have different activation fractions
               ! *** question ***
               tmp_aa = max( 1.e-35_r8, tmp_qa_clea*fclea ) / max( 1.e-35_r8, tmp_qa_gcav )
               tmp_aa = max( 0.0_r8, min( 1.0_r8, tmp_aa ) )
               tmp_aa_clea = tmp_aa/fclea
               tmp_aa_cldy = (1.0_r8-tmp_aa)/fcldy

#if ( defined( CAMBOX_ACTIVATE_THIS ) )
               if ( n <= 2 .and. ldiag13n ) then
                  if (n==1 .and. l2==0) write(lun13n,'(a)')
                  write(lun13n,'(a,2i3, 1p,6e12.4)') 'n, l2, tmp_aa, tmp_aa_clea, tmp_aa_cldy', &
                     n, l2, tmp_aa, tmp_aa_clea, tmp_aa_cldy
                  tmpa = 1.0e-6_r8*mwhost_num/mwdry
                  if (l2 > 0) tmpa = 1.0e9_r8
                  write(lun13n,'(a, 6x, 1p,6e12.4)') 'qct, qcy, qat, qay, qax, qtt           ', &
                     tmpa*tmp_qc_gcav, tmpa*tmp_qc_cldy, tmpa*tmp_qa_gcav, &
                     tmpa*tmp_qa_cldy, tmpa*tmp_qa_clea, tmpa*(tmp_qc_gcav+tmp_qa_gcav)
               end if
#endif
            end if ! (l2 <= 1)

            if (l2 == 0) then
               la = numptr_amode(n) - loffset
               lc = numptrcw_amode(n) - loffset
            else
               la = lmassptr_amode(l2,n) - loffset
               lc = lmassptrcw_amode(l2,n) - loffset
            end if

            qsub2(la,jclea) = qgcm2(la)*tmp_aa_clea
            qsub2(la,jcldy) = qgcm2(la)*tmp_aa_cldy
            qqcwsub2(lc,jclea) = 0.0_r8
            qqcwsub2(lc,jcldy) = qqcwgcm2(lc)/fcldy

            qsub3(la,jclea) = qgcm3(la)*tmp_aa_clea
            qsub3(la,jcldy) = qgcm3(la)*tmp_aa_cldy
            qqcwsub3(lc,jclea) = 0.0_r8
            qqcwsub3(lc,jcldy) = qqcwgcm3(lc)/fcldy

            end do ! l2
         end do ! n

      else if ((jclea == 1) .and. (jcldy == 0) .and. (nsubarea == 1)) then
! all clear, or cld < 1e-5
! in this case, fclea=1 and fcldy=0
!
! put all the gases and interstitial aerosols in the clear sub-area
!    and set mix-ratios = 0 in cloudy sub-area
! for cloud-borne aerosol, do nothing
!    because the grid-cell-mean cloud-borne aerosol will be left unchanged
!    (i.e., this routine only changes qqcw when cld >= 1e-5)
!
     lcopy(1:gas_pcnst) = lmapcc_all(1:gas_pcnst) > 0

     call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm1, qsub1(:,jclea) )
     call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm2, qsub2(:,jclea) )
     call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm3, qsub3(:,jclea) )

     call copy_gcm_to_subarea( gas_pcnst, lcopy, qqcwgcm2, qqcwsub2(:,jclea) )
     call copy_gcm_to_subarea( gas_pcnst, lcopy, qqcwgcm3, qqcwsub3(:,jclea) )

     !++ to be removed --
     !   do lmz = 1, gas_pcnst
     !      if (lmapcc_all(lmz) <= 0) cycle
     !      qsub1(lmz,jclea) = qgcm1(lmz)
     !      qsub2(lmz,jclea) = qgcm2(lmz)
     !      qsub3(lmz,jclea) = qgcm3(lmz)
     !      qqcwsub2(lmz,jclea) = qqcwgcm2(lmz)
     !      qqcwsub3(lmz,jclea) = qqcwgcm3(lmz)
     !   end do
     !== to be removed --

      else if ((jclea == 0) .and. (jcldy == 1) .and. (nsubarea == 1)) then
! all cloudy, or cld > 0.999
! in this case, fcldy= and fclea=0
!
! put all the gases and interstitial aerosols in the cloudy sub-area
!    and set mix-ratios = 0 in clear sub-area
!

     lcopy(1:gas_pcnst) = lmapcc_all(1:gas_pcnst) > 0

     call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm1, qsub1(:,jcldy) )
     call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm2, qsub2(:,jcldy) )
     call copy_gcm_to_subarea( gas_pcnst, lcopy, qgcm3, qsub3(:,jcldy) )

     call copy_gcm_to_subarea( gas_pcnst, lcopy, qqcwgcm2, qqcwsub2(:,jcldy) )
     call copy_gcm_to_subarea( gas_pcnst, lcopy, qqcwgcm3, qqcwsub3(:,jcldy) )

    !++ to be removed --
    !    do lmz = 1, gas_pcnst
    !       if (lmapcc_all(lmz) <= 0) cycle
    !       qsub1(lmz,jcldy) = qgcm1(lmz)
    !       qsub2(lmz,jcldy) = qgcm2(lmz)
    !       qsub3(lmz,jcldy) = qgcm3(lmz)
    !       qqcwsub2(lmz,jcldy) = qqcwgcm2(lmz)
    !       qqcwsub3(lmz,jcldy) = qqcwgcm3(lmz)
    !    end do
    !== to be removed --

      else
! this should not happen
         write(tmp_str,'(a,3(1x,i10))') &
            '*** modal_aero_amicphys - bad jclea, jcldy, nsubarea', &
            jclea, jcldy, nsubarea
         call endrun( tmp_str )
      end if

! aerosol water -- how to treat this in sub-areas needs more work/thinking
! currently modal_aero_water_uptake calculates qaerwat using
!    the grid-cell mean interstital-aerosol mix-rats and the clear-area rh
      do jsub = 1, nsubarea
         qaerwatsub3(:,jsub) = qaerwatgcm3(:)
      end do

      if (nsubarea == 1) then
! the j=2 subarea is used for some diagnostics
! but is not used in actual calculations
         j = 2
         qsub1(:,j) = 0.0_r8
         qsub2(:,j) = 0.0_r8
         qsub3(:,j) = 0.0_r8
         qqcwsub2(:,j) = 0.0_r8
         qqcwsub3(:,j) = 0.0_r8
      end if

