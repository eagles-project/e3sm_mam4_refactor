
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      ! Aerosol water
      !
      ! Notes from Dick Easter/Steve Ghan: how to treat aerosol water in subareas needs more work/thinking
      ! Currently modal_aero_water_uptake calculates qaerwat using
      ! the grid-cell mean interstital-aerosol mix-rats and the clear-area RH.
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

      qaerwatsub3(:,:) = 0.0_r8

      if ( present( qaerwat ) ) then
      ! If provided, the grid cell mean values of aerosol water mixing ratios are clipped
      ! and then assigned to all subareas.

         qaerwatgcm3(1:ntot_amode) = max( 0.0_r8, qaerwat(i,k,1:ntot_amode) )
         do jsub = 1, nsubarea
            qaerwatsub3(:,jsub) = qaerwatgcm3(:)
         end do
      end if

      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      ! Gases, interstitial aerosols, and cloud-borne aerosols
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      !----------------------------------------------------------------------------
      ! Copy grid cell mean mixing ratios; clip negative values if any.
      ! These values, together with cloud fraction and a few assumptions, are used
      ! in the remainder of the subroutine to calculate the sub-area mean mixing ratios.
      !----------------------------------------------------------------------------

      ! Gases and interstitial aerosols
      qgcm1(:) = max( 0.0_r8, q_pregaschem(i,k,:) )
      qgcm2(:) = max( 0.0_r8, q_precldchem(i,k,:) )
      qgcm3(:) = max( 0.0_r8, q(i,k,:) )

      ! Cloud-borne aerosols
      qqcwgcm2(:) = max( 0.0_r8, qqcw_precldchem(i,k,:) )
      qqcwgcm3(:) = max( 0.0_r8, qqcw(i,k,:) )


      !----------------------------------------------------------------------------
      ! Initialize the mean mixing ratios in subareas
      !----------------------------------------------------------------------------
      ! Gases and interstitial aerosols
      qsub1(:,:) = 0.0_r8
      qsub2(:,:) = 0.0_r8
      qsub3(:,:) = 0.0_r8

      ! Cloud-borne aerosols
      qqcwsub1(:,:) = 0.0_r8
      qqcwsub2(:,:) = 0.0_r8
      qqcwsub3(:,:) = 0.0_r8

      !------------------------------------------------------------------------------------------------
      ! Calculate initial (i.e., before cond/rnam/nnuc/coag) tracer mixing ratios within the sub-areas
      !------------------------------------------------------------------------------------------------
      grid_cell_has_only_clea_area = ((jclea == 1) .and. (jcldy == 0) .and. (nsubarea == 1))
      grid_cell_has_only_cldy_area = ((jclea == 0) .and. (jcldy == 1) .and. (nsubarea == 1))
      gird_cell_is_partly_cldy = (jclea > 0) .and. (jcldy > 0) .and.  (jclea+jcldy == 3) .and. (nsubarea == 2)

      !*************************************************************************************************
      ! Category I: grid cell is either all clear or all cloudy. Copy the grid cell mean values.
      !*************************************************************************************************
      if (grid_cell_has_only_clea_area.or.grid_cell_has_only_cldy_area) then

         lcopy(1:gas_pcnst) = lmapcc_all(1:gas_pcnst) > 0

         do jsub = 1,nsubarea
            call copy_cnst( qgcm1, qsub1(:,jsub), gas_pcnst, lcopy )
            call copy_cnst( qgcm2, qsub2(:,jsub), gas_pcnst, lcopy )
            call copy_cnst( qgcm3, qsub3(:,jsub), gas_pcnst, lcopy )

            call copy_cnst( qqcwgcm2, qqcwsub2(:,jsub), gas_pcnst, lcopy )
            call copy_cnst( qqcwgcm3, qqcwsub3(:,jsub), gas_pcnst, lcopy )
         end do

      !*************************************************************************************************
      ! Category II: partly cloudy grid cell. Tracer mixing ratios are generally are different
      ! in clear and cloudy subareas.  This is primarily because the
      ! interstitial aerosol mixing ratios are assumed to be lower in the cloudy sub-area than in
      ! the clear sub-area, as much of the aerosol is activated in the cloudy sub-area.
      !*************************************************************************************************
      else if ( gird_cell_is_partly_cldy ) then

         ! set gas mixing ratios in sub-areas (for the condensing gases only!!)

         cnst_is_gas(:) = lmapcc_all(:).eq.lmapcc_val_gas 

         !------------------------------------------------------------------------------------------
         ! Before gas chemistry, the gas concentrations are assumed to be the same in all subareas,
         ! i.e., they all equal the grid cell mean.
         !------------------------------------------------------------------------------------------
         do jsub = 1,nsubarea
            call copy_cnst( qgcm1, qsub1(:,jsub), gas_pcnst, lcopy )
         end do

         !------------------------------------------------------------------------------------------
         ! After gas chemistry, still assume gas concentrations are the same in all subareas.
         !------------------------------------------------------------------------------------------
         do jsub = 1,nsubarea
            call copy_cnst( qgcm2, qsub2(:,jsub), gas_pcnst, cnst_is_gas )
         end do

         !----------------------------------------------------------------------------------------
         ! After cloud chemistry, the gas mixing ratios and aerosol mass mixing ratios
         ! in the clear subarea are assumed to be the same as their values before cloud chemistry
         ! (because nothing has happend), while the mixing ratios in the cloudy subarea likely 
         ! have changed.
         !----------------------------------------------------------------------------------------
         ! Gases in the clear subarea remain the same as their values before cloud chemistry.

         call copy_cnst( qsub2(:,jclea), qsub3(:,jclea), gas_pcnst, cnst_is_gas )

         ! Calculater the gas mixing ratios in the cloudy subarea from the grid-cell mean, 
         ! cloud fraction and the clear-sky values

         do icnst = 1, gas_pcnst
          if (cnst_is_gas(icnst)) then

            qsub3(icnst,jcldy) = (qgcm3(icnst) - fclea*qsub3(icnst,jclea))/fcldy

            ! Check that this does not produce a negative value
            if (qsub3(icnst,jcldy) < 0.0_r8) then
               qsub3(icnst,jcldy) = 0.0_r8
               qsub3(icnst,jclea) = qgcm3(icnst)/fclea
            end if

          end if
         end do

         !-------------------------------------------------------------------------------
         ! set aerosol mixing ratios in sub-areas. Only needed for points 2 and 3 in the
         ! time integraion loop
         !-------------------------------------------------------------------------------
         call set_subarea_q_numb_for_cldbrn_aerosols( loffset, maxsubarea, gas_pcnst, jclea, jcldy, fcldy, qqcwgcm2, qqcwsub2 )
         call set_subarea_q_mass_for_cldbrn_aerosols( loffset, maxsubarea, gas_pcnst, jclea, jcldy, fcldy, qqcwgcm2, qqcwsub2 )

         call set_subarea_q_mass_for_cldbrn_aerosols( loffset, maxsubarea, gas_pcnst, jclea, jcldy, fcldy, qqcwgcm3, qqcwsub3 )
         call set_subarea_q_numb_for_cldbrn_aerosols( loffset, maxsubarea, gas_pcnst, jclea, jcldy, fcldy, qqcwgcm3, qqcwsub3 )

         !-----

         do n = 1, ntot_amode

         do l2 = 0, nspec_amode(n)

            if (l2 <= 1) then
            ! calculcate partitioning factors
               if (l2 == 0) then
                  la = numptr_amode(n) - loffset
                  lc = numptrcw_amode(n) - loffset
                  tmp_qa_gcav = qgcm2(la)
                  tmp_qc_gcav = qqcwgcm2(lc)
               else
                  tmp_qa_gcav = 0.0_r8
                  tmp_qc_gcav = 0.0_r8
                  do l3 = 1, nspec_amode(n)
                     la = lmassptr_amode(l3,n) - loffset
                     tmp_qa_gcav = tmp_qa_gcav + qgcm2(la)
                     lc = lmassptrcw_amode(l3,n) - loffset
                     tmp_qc_gcav = tmp_qc_gcav + qqcwgcm2(lc)
                  end do
               end if

               tmp_qc_cldy = tmp_qc_gcav/fcldy
               tmp_qa_cldy = max( 0.0_r8, ((tmp_qa_gcav+tmp_qc_gcav) - tmp_qc_cldy) )
               tmp_qa_clea = (tmp_qa_gcav - fcldy*tmp_qa_cldy)/fclea

               ! *** question ***
               !    use same tmp_aa_clea/cldy for everything ?
               !    use one for number and one for all masses (based on total mass) ?
               !    use separate ones for everything ?
               ! maybe one for number and one for all masses is best,
               !    because number and mass have different activation fractions
               ! *** question ***
               tmp_aa = max( 1.e-35_r8, tmp_qa_clea*fclea ) / max( 1.e-35_r8, tmp_qa_gcav )
               tmp_aa = max( 0.0_r8, min( 1.0_r8, tmp_aa ) )
               tmp_aa_clea = tmp_aa/fclea
               tmp_aa_cldy = (1.0_r8-tmp_aa)/fcldy

            end if ! (l2 <= 1)

            if (l2 == 0) then
               la = numptr_amode(n) - loffset
           !   lc = numptrcw_amode(n) - loffset
            else
               la = lmassptr_amode(l2,n) - loffset
           !   lc = lmassptrcw_amode(l2,n) - loffset
            end if

            qsub2(la,jclea) = qgcm2(la)*tmp_aa_clea
            qsub2(la,jcldy) = qgcm2(la)*tmp_aa_cldy
           !qqcwsub2(lc,jclea) = 0.0_r8
           !qqcwsub2(lc,jcldy) = qqcwgcm2(lc)/fcldy

            qsub3(la,jclea) = qgcm3(la)*tmp_aa_clea
            qsub3(la,jcldy) = qgcm3(la)*tmp_aa_cldy
           !qqcwsub3(lc,jclea) = 0.0_r8
           !qqcwsub3(lc,jcldy) = qqcwgcm3(lc)/fcldy

            end do ! l2
         end do ! n
         !-------------------------------------------------------------------------------
         ! Done setting aerosol mixing ratios
         !-------------------------------------------------------------------------------


      else ! This should not happen
         write(tmp_str,'(a,3(1x,i10))') '*** modal_aero_amicphys - bad jclea, jcldy, nsubarea', jclea, jcldy, nsubarea
         call endrun( tmp_str )
      end if
      !*************************************************************************************************
      ! Done partitioning gases and aerosols
      !*************************************************************************************************


